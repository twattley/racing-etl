-- PROCEDURE: staging.insert_into_joined_non_uk_ire_performance_data()

-- DROP PROCEDURE IF EXISTS staging.insert_into_joined_non_uk_ire_performance_data();

CREATE OR REPLACE PROCEDURE staging.insert_into_joined_non_uk_ire_performance_data(
	)
LANGUAGE 'plpgsql'
AS $BODY$
BEGIN
    INSERT INTO staging.joined_non_uk_ire_performance_data (
		horse_name,
		horse_age,
		jockey_name,
		jockey_claim,
		trainer_name,
		owner_name,
		weight_carried,
		draw,
		finishing_position,
		total_distance_beaten,
		age,
		official_rating,
		ts,
		rpr,
		industry_sp,
		extra_weight,
		headgear,
		in_race_comment,
		sire_name,
		dam_name,
		dams_sire,
		race_date,
		race_title,
		race_time,
		race_timestamp,
		race_class,
		conditions,
		distance,
		distance_full,
		going,
		winning_time,
		horse_type,
		number_of_runners,
		total_prize_money,
		first_place_prize_money,
		currency,
		country,
		surface,
		tfr,
		tfig,
		betfair_win_sp,
		betfair_place_sp,
		in_play_prices,
		tf_comment,
		hcap_range,
		age_range,
		race_type,
		main_race_comment,
		meeting_id,
		course_id,
		horse_id,
		sire_id,
		dam_id,
		trainer_id,
		jockey_id,
		owner_id,
		race_id,
		unique_id,
		created_at
	)
WITH joined_data AS (
    SELECT 
		nrr.horse_name as horse_name,
		nrr.horse_age as horse_age,
		nrr.jockey_name as jockey_name,
		nrr.jockey_claim as jockey_claim,
		nrr.trainer_name as trainer_name,
		nrr.owner_name as owner_name,
		nrr.horse_weight as weight_carried,
		nrr.draw,
		COALESCE(nrr.finishing_position, tf.finishing_position) AS finishing_position,
		nrr.total_distance_beaten,
		COALESCE(nrr.horse_age, tf.horse_age) AS age,
		COALESCE(nrr.official_rating, tf.official_rating) AS official_rating,
		nrr.ts_value as ts,
		nrr.rpr_value as rpr,
		nrr.horse_price as industry_sp,
		nrr.extra_weight as extra_weight,
		nrr.headgear,
		nrr.comment as in_race_comment,
		nrr.sire_name as sire_name,
		nrr.dam_name as dam_name,
		nrr.dams_sire as dams_sire,
		nrr.race_date as race_date,
		nrr.race_title as race_title,
		nrr.race_time as race_time,
		nrr.race_timestamp as race_timestamp,
		nrr.race_class as race_class,
		nrr.conditions as conditions,
		nrr.distance as distance,
		nrr.distance_full as distance_full,
		nrr.going as going,
		nrr.winning_time as winning_time,
		nrr.horse_type as horse_type,
		nrr.number_of_runners as number_of_runners,
		nrr.total_prize_money as total_prize_money,
		nrr.first_place_prize_money,
		nrr.currency,
		nrr.course_name as course_name,
		nrr.country as country,
	    COALESCE(
	        (regexp_match(nrr.race_title, '\(([^)]+)\)\s*$'))[1],
	        'Unknown'
	    ) AS surface,
		CASE 
		    WHEN tf.tf_rating IS NOT NULL AND tf.tf_rating != '' THEN tf.tf_rating
		    WHEN nrr.rpr_value IS NOT NULL AND nrr.rpr_value != '' THEN nrr.rpr_value
		    ELSE NULL
		END AS tfr,
		
		CASE 
		    WHEN tf.tf_speed_figure IS NOT NULL AND tf.tf_speed_figure != '' THEN tf.tf_speed_figure
		    WHEN nrr.ts_value IS NOT NULL AND nrr.ts_value != '' THEN nrr.ts_value
		    ELSE NULL
		END AS tfig,
		tf.betfair_win_sp as betfair_win_sp,
		tf.betfair_place_sp as betfair_place_sp,
		tf.in_play_prices as in_play_prices,
		COALESCE(tf.tf_comment, nrr.comment) AS tf_comment,
		tf.hcap_range as hcap_range,
		tf.age_range as age_range,
		tf.race_type as race_type,
		tf.main_race_comment as main_race_comment,
		nrr.meeting_id as meeting_id,
		c.id as course_id,
		h.id as horse_id,
		s.id as sire_id,
		d.id as dam_id,
		t.id as trainer_id,
		j.id as jockey_id,
		o.id as owner_id,
		nrr.race_id as race_id,
		nrr.unique_id as unique_id,
        ROW_NUMBER() OVER(PARTITION BY nrr.unique_id ORDER BY nrr.unique_id) AS rn
    FROM rp_raw.non_uk_ire_performance_data nrr
	LEFT JOIN course c ON nrr.course_id = c.rp_id
	LEFT JOIN horse h ON nrr.horse_id = h.rp_id
	LEFT JOIN sire s ON nrr.sire_id = s.rp_id
	LEFT JOIN dam d ON nrr.dam_id = d.rp_id
	LEFT JOIN trainer t ON nrr.trainer_id = t.rp_id
	LEFT JOIN jockey j ON nrr.jockey_id = j.rp_id
	LEFT JOIN owner o ON nrr.owner_id = o.rp_id
    LEFT JOIN tf_raw.non_uk_ire_performance_data tf 
		ON tf.horse_id = h.tf_id
		AND tf.race_date = nrr.race_date
    WHERE h.rp_id IS NOT NULL
)
SELECT 	horse_name,
		horse_age,
		jockey_name,
		jockey_claim,
		trainer_name,
		owner_name,
		weight_carried,
		draw,
		finishing_position,
		total_distance_beaten,
		age,
		official_rating,
		ts,
		rpr,
		industry_sp,
		extra_weight,
		headgear,
		in_race_comment,
		sire_name,
		dam_name,
		dams_sire,
		race_date,
		race_title,
		race_time,
		race_timestamp,
		race_class,
		conditions,
		distance,
		distance_full,
		going,
		winning_time,
		horse_type,
		number_of_runners,
		total_prize_money,
		first_place_prize_money,
		currency,
		country,
		surface,
		tfr,
		tfig,
		betfair_win_sp,
		betfair_place_sp,
		in_play_prices,
		tf_comment,
		hcap_range,
		age_range,
		race_type,
		main_race_comment,
		meeting_id,
		course_id,
		horse_id,
		sire_id,
		dam_id,
		trainer_id,
		jockey_id,
		owner_id,
		race_id,
		unique_id,
		now()
	FROM joined_data WHERE rn = 1
		ON CONFLICT (unique_id)
		    DO UPDATE SET
				horse_name = EXCLUDED.horse_name,
				horse_age = EXCLUDED.horse_age,
				jockey_name = EXCLUDED.jockey_name,
				jockey_claim = EXCLUDED.jockey_claim,
				trainer_name = EXCLUDED.trainer_name,
				owner_name = EXCLUDED.owner_name,
				weight_carried = EXCLUDED.weight_carried,
				draw = EXCLUDED.draw,
				finishing_position = EXCLUDED.finishing_position,
				total_distance_beaten = EXCLUDED.total_distance_beaten,
				age = EXCLUDED.age,
				official_rating = EXCLUDED.official_rating,
				ts = EXCLUDED.ts,
				rpr = EXCLUDED.rpr,
				industry_sp = EXCLUDED.industry_sp,
				extra_weight = EXCLUDED.extra_weight,
				headgear = EXCLUDED.headgear,
				in_race_comment = EXCLUDED.in_race_comment,
				sire_name = EXCLUDED.sire_name,
				dam_name = EXCLUDED.dam_name,
				dams_sire = EXCLUDED.dams_sire,
				race_date = EXCLUDED.race_date,
				race_title = EXCLUDED.race_title,
				race_time = EXCLUDED.race_time,
				race_timestamp = EXCLUDED.race_timestamp,
				race_class = EXCLUDED.race_class,
				conditions = EXCLUDED.conditions,
				distance = EXCLUDED.distance,
				distance_full = EXCLUDED.distance_full,
				going = EXCLUDED.going,
				winning_time = EXCLUDED.winning_time,
				horse_type = EXCLUDED.horse_type,
				number_of_runners = EXCLUDED.number_of_runners,
				total_prize_money = EXCLUDED.total_prize_money,
				first_place_prize_money = EXCLUDED.first_place_prize_money,
				currency = EXCLUDED.currency,
				country = EXCLUDED.country,
				surface = EXCLUDED.surface,
				tfr = EXCLUDED.tfr,
				tfig = EXCLUDED.tfig,
				betfair_win_sp = EXCLUDED.betfair_win_sp,
				betfair_place_sp = EXCLUDED.betfair_place_sp,
				in_play_prices = EXCLUDED.in_play_prices,
				tf_comment = EXCLUDED.tf_comment,
				hcap_range = EXCLUDED.hcap_range,
				age_range = EXCLUDED.age_range,
				race_type = EXCLUDED.race_type,
				main_race_comment = EXCLUDED.main_race_comment,
				meeting_id = EXCLUDED.meeting_id,
				course_id = EXCLUDED.course_id,
				horse_id = EXCLUDED.horse_id,
				sire_id = EXCLUDED.sire_id,
				dam_id = EXCLUDED.dam_id,
				trainer_id = EXCLUDED.trainer_id,
				jockey_id = EXCLUDED.jockey_id,
				owner_id = EXCLUDED.owner_id,
				race_id = EXCLUDED.race_id;
END;
$BODY$;
ALTER PROCEDURE staging.insert_into_joined_non_uk_ire_performance_data()
    OWNER TO tomwattley;
